
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"

export type * from '../models.ts'
export type * from './prismaNamespace.ts'

export const Decimal = runtime.Decimal


export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.DbNull),
  JsonNull: runtime.objectEnumValues.classes.JsonNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.JsonNull),
  AnyNull: runtime.objectEnumValues.classes.AnyNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.AnyNull),
}
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull


export const ModelName = {
  State: 'State',
  User: 'User',
  UserCredential: 'UserCredential',
  Customer: 'Customer',
  CustomerContact: 'CustomerContact',
  Product: 'Product',
  ProductColor: 'ProductColor',
  ProductInventory: 'ProductInventory',
  ProductSale: 'ProductSale'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const StateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code'
} as const

export type StateScalarFieldEnum = (typeof StateScalarFieldEnum)[keyof typeof StateScalarFieldEnum]


export const UserScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  gender: 'gender',
  email: 'email',
  streetAddress: 'streetAddress',
  streetAddress2: 'streetAddress2',
  city: 'city',
  stateId: 'stateId',
  zip: 'zip',
  phone: 'phone',
  isActive: 'isActive',
  dateCreated: 'dateCreated'
} as const

export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


export const UserCredentialScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  password: 'password',
  role: 'role'
} as const

export type UserCredentialScalarFieldEnum = (typeof UserCredentialScalarFieldEnum)[keyof typeof UserCredentialScalarFieldEnum]


export const CustomerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  streetAddress: 'streetAddress',
  streetAddress2: 'streetAddress2',
  city: 'city',
  stateId: 'stateId',
  zip: 'zip',
  phone: 'phone',
  isActive: 'isActive',
  dateCreated: 'dateCreated',
  dateUpdated: 'dateUpdated'
} as const

export type CustomerScalarFieldEnum = (typeof CustomerScalarFieldEnum)[keyof typeof CustomerScalarFieldEnum]


export const CustomerContactScalarFieldEnum = {
  id: 'id',
  customerId: 'customerId',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  streetAddress: 'streetAddress',
  streetAddress2: 'streetAddress2',
  city: 'city',
  stateId: 'stateId',
  zip: 'zip',
  phone: 'phone',
  isActive: 'isActive',
  dateCreated: 'dateCreated',
  dateUpdated: 'dateUpdated'
} as const

export type CustomerContactScalarFieldEnum = (typeof CustomerContactScalarFieldEnum)[keyof typeof CustomerContactScalarFieldEnum]


export const ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  price: 'price',
  genderId: 'genderId',
  productType: 'productType',
  isActive: 'isActive',
  dateCreated: 'dateCreated',
  dateUpdated: 'dateUpdated'
} as const

export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


export const ProductColorScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  color: 'color',
  dateCreated: 'dateCreated',
  dateUpdated: 'dateUpdated'
} as const

export type ProductColorScalarFieldEnum = (typeof ProductColorScalarFieldEnum)[keyof typeof ProductColorScalarFieldEnum]


export const ProductInventoryScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  size: 'size',
  quantity: 'quantity',
  dateCreated: 'dateCreated',
  dateUpdated: 'dateUpdated'
} as const

export type ProductInventoryScalarFieldEnum = (typeof ProductInventoryScalarFieldEnum)[keyof typeof ProductInventoryScalarFieldEnum]


export const ProductSaleScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  customerId: 'customerId',
  userId: 'userId',
  quantity: 'quantity',
  price: 'price',
  dateCreated: 'dateCreated',
  dateUpdated: 'dateUpdated'
} as const

export type ProductSaleScalarFieldEnum = (typeof ProductSaleScalarFieldEnum)[keyof typeof ProductSaleScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
} as const

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


export const StateOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code'
} as const

export type StateOrderByRelevanceFieldEnum = (typeof StateOrderByRelevanceFieldEnum)[keyof typeof StateOrderByRelevanceFieldEnum]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


export const UserOrderByRelevanceFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  streetAddress: 'streetAddress',
  streetAddress2: 'streetAddress2',
  city: 'city',
  stateId: 'stateId',
  zip: 'zip',
  phone: 'phone'
} as const

export type UserOrderByRelevanceFieldEnum = (typeof UserOrderByRelevanceFieldEnum)[keyof typeof UserOrderByRelevanceFieldEnum]


export const UserCredentialOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  password: 'password'
} as const

export type UserCredentialOrderByRelevanceFieldEnum = (typeof UserCredentialOrderByRelevanceFieldEnum)[keyof typeof UserCredentialOrderByRelevanceFieldEnum]


export const CustomerOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  streetAddress: 'streetAddress',
  streetAddress2: 'streetAddress2',
  city: 'city',
  stateId: 'stateId',
  zip: 'zip',
  phone: 'phone'
} as const

export type CustomerOrderByRelevanceFieldEnum = (typeof CustomerOrderByRelevanceFieldEnum)[keyof typeof CustomerOrderByRelevanceFieldEnum]


export const CustomerContactOrderByRelevanceFieldEnum = {
  id: 'id',
  customerId: 'customerId',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  streetAddress: 'streetAddress',
  streetAddress2: 'streetAddress2',
  city: 'city',
  stateId: 'stateId',
  zip: 'zip',
  phone: 'phone'
} as const

export type CustomerContactOrderByRelevanceFieldEnum = (typeof CustomerContactOrderByRelevanceFieldEnum)[keyof typeof CustomerContactOrderByRelevanceFieldEnum]


export const ProductOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  price: 'price',
  genderId: 'genderId'
} as const

export type ProductOrderByRelevanceFieldEnum = (typeof ProductOrderByRelevanceFieldEnum)[keyof typeof ProductOrderByRelevanceFieldEnum]


export const ProductColorOrderByRelevanceFieldEnum = {
  id: 'id',
  productId: 'productId'
} as const

export type ProductColorOrderByRelevanceFieldEnum = (typeof ProductColorOrderByRelevanceFieldEnum)[keyof typeof ProductColorOrderByRelevanceFieldEnum]


export const ProductInventoryOrderByRelevanceFieldEnum = {
  id: 'id',
  productId: 'productId'
} as const

export type ProductInventoryOrderByRelevanceFieldEnum = (typeof ProductInventoryOrderByRelevanceFieldEnum)[keyof typeof ProductInventoryOrderByRelevanceFieldEnum]


export const ProductSaleOrderByRelevanceFieldEnum = {
  id: 'id',
  productId: 'productId',
  customerId: 'customerId',
  userId: 'userId'
} as const

export type ProductSaleOrderByRelevanceFieldEnum = (typeof ProductSaleOrderByRelevanceFieldEnum)[keyof typeof ProductSaleOrderByRelevanceFieldEnum]

