
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 * If you're looking for something you can import in the client-side of your application, please refer to the `browser.ts` file instead.
 * 
 * ðŸŸ¢ You can import this file directly.
 */

import * as process from 'node:process'
import * as path from 'node:path'
import { fileURLToPath } from 'node:url'
globalThis['__dirname'] = path.dirname(fileURLToPath(import.meta.url))

import * as runtime from "@prisma/client/runtime/library"
import * as $Enums from "./enums.ts"
import * as $Class from "./internal/class.ts"
import * as Prisma from "./internal/prismaNamespace.ts"

export * as $Enums from './enums.ts'
export * from "./enums.ts"
/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more States
 * const states = await prisma.state.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname)
export type PrismaClient<LogOpts extends Prisma.LogLevel = never, OmitOpts extends Prisma.PrismaClientOptions["omit"] = Prisma.PrismaClientOptions["omit"], ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = $Class.PrismaClient<LogOpts, OmitOpts, ExtArgs>
export { Prisma }


// file annotations for bundling tools to include these files
path.join(__dirname, "libquery_engine-darwin.dylib.node")
path.join(process.cwd(), "src/generated/prisma/libquery_engine-darwin.dylib.node")

/**
 * Model State
 * 
 */
export type State = Prisma.StateModel
/**
 * Model User
 * 
 */
export type User = Prisma.UserModel
/**
 * Model UserCredential
 * 
 */
export type UserCredential = Prisma.UserCredentialModel
/**
 * Model Customer
 * 
 */
export type Customer = Prisma.CustomerModel
/**
 * Model CustomerContact
 * 
 */
export type CustomerContact = Prisma.CustomerContactModel
/**
 * Model Product
 * 
 */
export type Product = Prisma.ProductModel
/**
 * Model ProductColor
 * 
 */
export type ProductColor = Prisma.ProductColorModel
/**
 * Model ProductInventory
 * 
 */
export type ProductInventory = Prisma.ProductInventoryModel
/**
 * Model ProductSale
 * 
 */
export type ProductSale = Prisma.ProductSaleModel
